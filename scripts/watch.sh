#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SmokyApp
# –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
# –ê–≤—Ç–æ—Ä: SmokyApp Team
# –í–µ—Ä—Å–∏—è: 1.0.0

set -euo pipefail

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
REPO_URL="${REPO_URL:-https://github.com/smokyapp/webapp.git}"
BRANCH="${BRANCH:-main}"
CHECK_INTERVAL="${CHECK_INTERVAL:-300}"  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
LOG_FILE="${LOG_FILE:-/var/log/smokyapp/watch.log}"
PID_FILE="${PID_FILE:-/var/run/smokyapp-watch.pid}"
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    local level="$1"
    shift
    local message="$*"
    local timestamp=$(date '+%Y-%m-%d %H:%M:%S')
    
    echo -e "${timestamp} [${level}] ${message}" | tee -a "${LOG_FILE}"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $*"
    log "INFO" "$*"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $*"
    log "SUCCESS" "$*"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $*"
    log "WARNING" "$*"
}

error() {
    echo -e "${RED}[ERROR]${NC} $*"
    log "ERROR" "$*"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–ø—É—â–µ–Ω–Ω–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
is_running() {
    if [[ -f "$PID_FILE" ]]; then
        local pid=$(cat "$PID_FILE")
        if ps -p "$pid" > /dev/null 2>&1; then
            return 0
        else
            rm -f "$PID_FILE"
            return 1
        fi
    fi
    return 1
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
start_daemon() {
    if is_running; then
        warning "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞ (PID: $(cat "$PID_FILE"))"
        return 1
    fi
    
    info "–ó–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p "$(dirname "$LOG_FILE")"
    mkdir -p "$(dirname "$PID_FILE")"
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
    nohup "$0" --daemon > "$LOG_FILE" 2>&1 &
    local pid=$!
    
    echo "$pid" > "$PID_FILE"
    success "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω–∞ (PID: $pid)"
    
    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è
    sleep 2
    if is_running; then
        success "–°–ª—É–∂–±–∞ —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
        info "–õ–æ–≥–∏: $LOG_FILE"
        info "PID —Ñ–∞–π–ª: $PID_FILE"
    else
        error "–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å–ª—É–∂–±—ã"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_daemon() {
    if ! is_running; then
        warning "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞"
        return 1
    fi
    
    local pid=$(cat "$PID_FILE")
    info "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–ª—É–∂–±—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (PID: $pid)..."
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    kill "$pid" 2>/dev/null || true
    
    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
    local attempts=0
    while [[ $attempts -lt 10 ]] && ps -p "$pid" > /dev/null 2>&1; do
        sleep 1
        ((attempts++))
    done
    
    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≤–µ—Ä—à–∞–µ–º, –µ—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è
    if ps -p "$pid" > /dev/null 2>&1; then
        warning "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞..."
        kill -9 "$pid" 2>/dev/null || true
        sleep 1
    fi
    
    rm -f "$PID_FILE"
    success "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart_daemon() {
    info "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–ª—É–∂–±—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    stop_daemon || true
    sleep 2
    start_daemon
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞
get_status() {
    echo "=== –°—Ç–∞—Ç—É—Å —Å–ª—É–∂–±—ã –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ SmokyApp ==="
    echo ""
    
    if is_running; then
        local pid=$(cat "$PID_FILE")
        echo "–°—Ç–∞—Ç—É—Å: –ó–ê–ü–£–©–ï–ù–ê"
        echo "PID: $pid"
        echo "–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: $(ps -o lstart= -p "$pid" 2>/dev/null || echo "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")"
    else
        echo "–°—Ç–∞—Ç—É—Å: –û–°–¢–ê–ù–û–í–õ–ï–ù–ê"
    fi
    
    echo "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REPO_URL"
    echo "–í–µ—Ç–∫–∞: $BRANCH"
    echo "–ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏: $CHECK_INTERVAL —Å–µ–∫—É–Ω–¥"
    echo "–õ–æ–≥ —Ñ–∞–π–ª: $LOG_FILE"
    echo ""
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞
    if [[ -f "$LOG_FILE" ]]; then
        echo "=== –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –ª–æ–≥–∞ ==="
        tail -n 10 "$LOG_FILE" 2>/dev/null || echo "–õ–æ–≥ —Ñ–∞–π–ª –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    fi
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
check_remote_updates() {
    local current_commit="$1"
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç —Å GitHub –±–µ–∑ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
    local latest_commit
    latest_commit=$(git ls-remote "$REPO_URL" "$BRANCH" 2>/dev/null | cut -f1)
    
    if [[ -z "$latest_commit" ]]; then
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–µ–º –∫–æ–º–º–∏—Ç–µ"
        return 2
    fi
    
    if [[ "$current_commit" != "$latest_commit" ]]; then
        info "–ù–∞–π–¥–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!"
        info "–¢–µ–∫—É—â–∏–π –∫–æ–º–º–∏—Ç: $current_commit"
        info "–ù–æ–≤—ã–π –∫–æ–º–º–∏—Ç: $latest_commit"
        return 0  # –ï—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    fi
    
    return 1  # –ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
}

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
send_notification() {
    local type="$1"
    local message="$2"
    
    log "NOTIFICATION" "$type: $message"
    
    # Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if [[ -n "${TELEGRAM_BOT_TOKEN:-}" && -n "${TELEGRAM_CHAT_ID:-}" ]]; then
        local emoji
        case "$type" in
            "UPDATE_AVAILABLE") emoji="üîÑ" ;;
            "UPDATE_SUCCESS") emoji="‚úÖ" ;;
            "UPDATE_FAILED") emoji="‚ùå" ;;
            "SERVICE_STARTED") emoji="üöÄ" ;;
            "SERVICE_STOPPED") emoji="‚èπÔ∏è" ;;
            *) emoji="‚ÑπÔ∏è" ;;
        esac
        
        curl -s -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TELEGRAM_CHAT_ID}" \
            -d text="${emoji} SmokyApp Monitor: ${message}" \
            -d parse_mode="HTML" > /dev/null 2>&1 || true
    fi
    
    # Webhook —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    if [[ -n "${WEBHOOK_URL:-}" ]]; then
        curl -s -X POST "$WEBHOOK_URL" \
            -H "Content-Type: application/json" \
            -d "{\"type\":\"$type\",\"message\":\"$message\",\"timestamp\":\"$(date -Iseconds)\"}" > /dev/null 2>&1 || true
    fi
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
monitoring_loop() {
    info "–ó–∞–ø—É—Å–∫ —Ü–∏–∫–ª–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ (–∏–Ω—Ç–µ—Ä–≤–∞–ª: ${CHECK_INTERVAL}s)"
    send_notification "SERVICE_STARTED" "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–ø—É—â–µ–Ω–∞"
    
    local last_commit=""
    local error_count=0
    local max_errors=5
    
    while true; do
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
        case $(check_remote_updates "$last_commit") in
            0)  # –ï—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                info "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –∑–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
                send_notification "UPDATE_AVAILABLE" "–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –Ω–∞—á–∏–Ω–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ"
                
                if "$SCRIPT_DIR/update.sh"; then
                    success "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ"
                    send_notification "UPDATE_SUCCESS" "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–æ"
                    error_count=0
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º last_commit –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                    last_commit=$(git ls-remote "$REPO_URL" "$BRANCH" 2>/dev/null | cut -f1)
                else
                    error "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏"
                    send_notification "UPDATE_FAILED" "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
                    ((error_count++))
                    
                    if [[ $error_count -ge $max_errors ]]; then
                        error "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ($max_errors)"
                        send_notification "UPDATE_FAILED" "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
                        break
                    fi
                fi
                ;;
            1)  # –ù–µ—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
                info "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
                error_count=0
                ;;
            2)  # –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏
                warning "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
                ((error_count++))
                
                if [[ $error_count -ge $max_errors ]]; then
                    error "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ ($max_errors)"
                    send_notification "UPDATE_FAILED" "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—à–∏–±–æ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
                    break
                fi
                ;;
        esac
        
        # –ñ–¥–µ–º –¥–æ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        info "–°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ $CHECK_INTERVAL —Å–µ–∫—É–Ω–¥..."
        sleep "$CHECK_INTERVAL"
    done
    
    send_notification "SERVICE_STOPPED" "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    rm -f "$PID_FILE"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
cleanup() {
    info "–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    send_notification "SERVICE_STOPPED" "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ —Å–∏–≥–Ω–∞–ª—É"
    rm -f "$PID_FILE"
    exit 0
}

# –§—É–Ω–∫—Ü–∏—è —Å–ø—Ä–∞–≤–∫–∏
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–ö–û–ú–ê–ù–î–ê]"
    echo ""
    echo "–°–ª—É–∂–±–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è SmokyApp"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  start          –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ"
    echo "  stop           –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å–ª—É–∂–±—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  restart        –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É–∂–±—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo "  status         –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å —Å–ª—É–∂–±—ã"
    echo "  check          –û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π"
    echo "  logs           –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Å–ª—É–∂–±—ã"
    echo "  --daemon       –í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞"
    echo "  -h, --help     –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:"
    echo "  REPO_URL           URL —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Git"
    echo "  BRANCH             –í–µ—Ç–∫–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è"
    echo "  CHECK_INTERVAL     –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö"
    echo "  TELEGRAM_BOT_TOKEN –¢–æ–∫–µ–Ω Telegram –±–æ—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    echo "  TELEGRAM_CHAT_ID   ID —á–∞—Ç–∞ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
    echo "  WEBHOOK_URL        URL webhook –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    case "${1:-start}" in
        start)
            start_daemon
            ;;
        stop)
            stop_daemon
            ;;
        restart)
            restart_daemon
            ;;
        status)
            get_status
            ;;
        check)
            info "–û–¥–Ω–æ—Ä–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π..."
            if check_remote_updates ""; then
                success "–ù–∞–π–¥–µ–Ω—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è"
            else
                info "–û–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
            fi
            ;;
        logs)
            if [[ -f "$LOG_FILE" ]]; then
                tail -f "$LOG_FILE"
            else
                error "–õ–æ–≥ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: $LOG_FILE"
                exit 1
            fi
            ;;
        --daemon)
            # –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–µ–∂–∏–º –¥–ª—è —Ñ–æ–Ω–æ–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
            trap cleanup TERM INT
            monitoring_loop
            ;;
        -h|--help)
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $1"
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"
