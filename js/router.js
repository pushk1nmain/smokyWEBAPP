/**
 * –°–∏—Å—Ç–µ–º–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞–º–∏ –¥–ª—è SmokyApp
 * –†–æ—É—Ç–µ—Ä –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞
 */

/**
 * –ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å —ç–∫—Ä–∞–Ω–∞
 */
class BaseScreen {
  constructor(name, config = {}) {
    this.name = name;
    this.title = config.title || name;
    this.hasMainButton = config.hasMainButton !== false;
    this.hasBackButton = config.hasBackButton !== false;
    this.mainButtonText = config.mainButtonText || '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å';
    this.isLoaded = false;
    this.container = null;
    this.data = {};
    
    // –ü—Ä–∏–≤—è–∑–∫–∞ –º–µ—Ç–æ–¥–æ–≤ –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
    this.handleMainButton = this.handleMainButton.bind(this);
    this.handleBackButton = this.handleBackButton.bind(this);
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ —ç–∫—Ä–∞–Ω–∞ (HTML, CSS, JS)
   * @returns {Promise<void>}
   */
  async load() {
    if (this.isLoaded) return;

    try {
      let html;
      
      try {
        // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å HTML —Ñ–∞–π–ª —ç–∫—Ä–∞–Ω–∞
        const htmlResponse = await fetch(`screens/${this.name}/${this.name}.html`);
        if (!htmlResponse.ok) throw new Error(`HTML —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${this.name}`);
        html = await htmlResponse.text();
      } catch (htmlError) {
        console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å HTML –¥–ª—è —ç–∫—Ä–∞–Ω–∞ ${this.name}, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback`);
        html = this.generateFallbackHTML();
      }

      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å CSS (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è)
      try {
        await this.loadCSS();
      } catch (cssError) {
        console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å CSS –¥–ª—è —ç–∫—Ä–∞–Ω–∞ ${this.name}:`, cssError);
      }

      // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–∞
      this.container = document.createElement('div');
      this.container.className = 'screen';
      this.container.innerHTML = html;

      // –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å JS –ª–æ–≥–∏–∫—É —ç–∫—Ä–∞–Ω–∞ (–Ω–µ –∫—Ä–∏—Ç–∏—á–Ω–æ –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è)
      try {
        await this.loadJS();
      } catch (jsError) {
        console.warn(`‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å JS –¥–ª—è —ç–∫—Ä–∞–Ω–∞ ${this.name}:`, jsError);
      }

      this.isLoaded = true;
    } catch (error) {
      console.error(`‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫—Ä–∞–Ω–∞ ${this.name}:`, error);
      throw error;
    }
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è fallback HTML –¥–ª—è —ç–∫—Ä–∞–Ω–∞
   * @returns {string} HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
   */
  generateFallbackHTML() {
    const screenTitles = {
      'welcome': '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ SmokyApp!',
      'name-input': '–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?',
      'city-selection': '–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥',
      'progress-tracker': '–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å'
    };

    const screenDescriptions = {
      'welcome': '–ù–∞—á–Ω–∏—Ç–µ —Å–≤–æ–π –ø—É—Ç—å –∫ –∂–∏–∑–Ω–∏ –±–µ–∑ –∫—É—Ä–µ–Ω–∏—è',
      'name-input': '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –æ–ø—ã—Ç–∞',
      'city-selection': '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Å–æ–≤–æ–≥–æ –ø–æ—è—Å–∞',
      'progress-tracker': '–û—Ç—Å–ª–µ–∂–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å –≤ –æ—Ç–∫–∞–∑–µ –æ—Ç –∫—É—Ä–µ–Ω–∏—è'
    };

    const title = screenTitles[this.name] || `–≠–∫—Ä–∞–Ω: ${this.title}`;
    const description = screenDescriptions[this.name] || '–î–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω';

    return `
      <div class="screen__header">
        <h1 class="screen__title">${title}</h1>
        <p class="screen__subtitle">${description}</p>
      </div>
      <div class="screen__content">
        <div class="card">
          <div class="card__content">
            ${this.generateScreenContent()}
          </div>
        </div>
      </div>
    `;
  }

  /**
   * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ —ç–∫—Ä–∞–Ω–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
   * @returns {string} HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
   */
  generateScreenContent() {
    switch (this.name) {
      case 'welcome':
        return `
          <div class="text-center">
            <div style="font-size: 64px; margin-bottom: var(--spacing-4);">üö≠</div>
            <p class="text-lg" style="margin-bottom: var(--spacing-6);">
              –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Ç—ã—Å—è—á–∞–º –ª—é–¥–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞—á–∞–ª–∏ —Å–≤–æ–π –ø—É—Ç—å –∫ –∑–¥–æ—Ä–æ–≤–æ–π –∂–∏–∑–Ω–∏.
            </p>
            <div style="background: var(--color-surface-variant); padding: var(--spacing-4); border-radius: var(--radius-lg);">
              <p class="text-sm text-secondary">
                ‚úÖ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –æ—Ç–∫–∞–∑–∞ –æ—Ç –∫—É—Ä–µ–Ω–∏—è<br>
                ‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞<br>
                ‚úÖ –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞
              </p>
            </div>
          </div>
        `;
      
      case 'name-input':
        return `
          <div class="form-group">
            <label for="user-name" class="form-label">–í–∞—à–µ –∏–º—è</label>
            <input 
              type="text" 
              id="user-name" 
              class="form-input" 
              placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è" 
              maxlength="50"
              autocomplete="given-name"
            />
            <div class="form-help">–≠—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–∞—à –æ–ø—ã—Ç</div>
          </div>
        `;
      
      case 'city-selection':
        return `
          <div class="form-group">
            <label for="user-city" class="form-label">–í–∞—à –≥–æ—Ä–æ–¥</label>
            <input 
              type="text" 
              id="user-city" 
              class="form-input" 
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞" 
              autocomplete="address-level2"
            />
            <div class="form-help">–ù—É–∂–Ω–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π</div>
          </div>
        `;
      
      case 'progress-tracker':
        return `
          <div class="text-center">
            <div style="font-size: 48px; margin-bottom: var(--spacing-4);">üéØ</div>
            <h3 style="margin-bottom: var(--spacing-6); color: var(--color-primary);">–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞!</h3>
            <div style="background: var(--color-surface-variant); padding: var(--spacing-6); border-radius: var(--radius-lg); margin-bottom: var(--spacing-6);">
              <div style="font-size: var(--font-size-2xl); font-weight: var(--font-weight-bold); color: var(--color-primary); margin-bottom: var(--spacing-2);">
                –î–µ–Ω—å 1
              </div>
              <p class="text-secondary">–í—ã –Ω–∞—á–∞–ª–∏ —Å–≤–æ–π –ø—É—Ç—å!</p>
            </div>
          </div>
        `;
      
      default:
        return `
          <div class="text-center">
            <div style="font-size: 48px; margin-bottom: var(--spacing-4);">‚öôÔ∏è</div>
            <p class="text-secondary">–≠–∫—Ä–∞–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</p>
          </div>
        `;
    }
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ CSS —Ñ–∞–π–ª–∞ —ç–∫—Ä–∞–Ω–∞
   * @returns {Promise<void>}
   */
  async loadCSS() {
    return new Promise((resolve, reject) => {
      const existingLink = document.querySelector(`link[href*="${this.name}.css"]`);
      if (existingLink) {
        resolve();
        return;
      }

      const link = document.createElement('link');
      link.rel = 'stylesheet';
      link.href = `screens/${this.name}/${this.name}.css`;
      link.onload = () => resolve();
      link.onerror = () => reject(new Error(`CSS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${this.name}`));
      document.head.appendChild(link);
    });
  }

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ JS —Ñ–∞–π–ª–∞ —ç–∫—Ä–∞–Ω–∞
   * @returns {Promise<void>}
   */
  async loadJS() {
    return new Promise((resolve, reject) => {
      const existingScript = document.querySelector(`script[src*="${this.name}.js"]`);
      if (existingScript) {
        resolve();
        return;
      }

      const script = document.createElement('script');
      script.src = `screens/${this.name}/${this.name}.js`;
      script.onload = () => resolve();
      script.onerror = () => reject(new Error(`JS —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: ${this.name}`));
      document.head.appendChild(script);
    });
  }

  /**
   * –ü–æ–∫–∞–∑ —ç–∫—Ä–∞–Ω–∞
   * @returns {Promise<void>}
   */
  async show() {
    console.log(`üì∫ –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω: ${this.name}`);
    
    if (!this.isLoaded) {
      console.log('   - –≠–∫—Ä–∞–Ω –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º...');
      await this.load();
    }
    
    console.log('   - –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏:', { isLoaded: this.isLoaded, hasContainer: !!this.container });

    // –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –¥–æ–±–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω
    const screenContainer = document.getElementById('screen-container');
    if (!screenContainer) {
      throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }
    
    console.log('   - –û—á–∏—â–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤');
    screenContainer.innerHTML = '';
    
    if (!this.container) {
      throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω');
    }
    
    console.log('   - –î–æ–±–∞–≤–ª—è–µ–º —ç–∫—Ä–∞–Ω –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä');
    console.log('   - HTML —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —ç–∫—Ä–∞–Ω–∞:', this.container.innerHTML.substring(0, 200) + '...');
    screenContainer.appendChild(this.container);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –¥–æ–±–∞–≤–∏–ª—Å—è
    console.log('   - –ö–æ–Ω—Ç–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω, innerHTML –¥–ª–∏–Ω–∞:', screenContainer.innerHTML.length);

    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram –∫–Ω–æ–ø–∫–∏
    console.log('   - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Telegram –∫–Ω–æ–ø–∫–∏');
    try {
      this.setupTelegramButtons();
    } catch (buttonError) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Telegram –∫–Ω–æ–ø–æ–∫:', buttonError);
    }

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω
    console.log('   - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —ç–∫—Ä–∞–Ω');
    try {
      await this.init();
    } catch (initError) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —ç–∫—Ä–∞–Ω–∞:', initError);
    }

    // –§–æ–∫—É—Å –Ω–∞ —ç–∫—Ä–∞–Ω–µ –¥–ª—è accessibility
    try {
      this.container.focus();
    } catch (focusError) {
      console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Ñ–æ–∫—É—Å–∞:', focusError);
    }
    
    console.log(`‚úÖ –≠–∫—Ä–∞–Ω ${this.name} –ø–æ–∫–∞–∑–∞–Ω —É—Å–ø–µ—à–Ω–æ`);
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –∫–Ω–æ–ø–æ–∫
   */
  setupTelegramButtons() {
    console.log('üîò –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram –∫–Ω–æ–ø–æ–∫');
    console.log('   - TelegramManager –≥–æ—Ç–æ–≤:', Utils.isTelegramManagerReady());
    
    if (!Utils.isTelegramManagerReady()) {
      console.warn('‚ö†Ô∏è TelegramManager –Ω–µ –≥–æ—Ç–æ–≤');
      return;
    }

    // –ì–ª–∞–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞
    if (this.hasMainButton) {
      console.log('   - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É:', this.mainButtonText);
      Utils.safeTelegramManagerCall('showMainButton', [this.mainButtonText, this.isValid()]);
      Utils.safeTelegramManagerCall('addEventListener', ['mainButtonClicked', this.handleMainButton]);
    } else {
      console.log('   - –°–∫—Ä—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É');
      Utils.safeTelegramManagerCall('hideMainButton');
    }

    // –ö–Ω–æ–ø–∫–∞ –Ω–∞–∑–∞–¥
    if (this.hasBackButton && Router.canGoBack()) {
      console.log('   - –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥');
      Utils.safeTelegramManagerCall('showBackButton');
      Utils.safeTelegramManagerCall('addEventListener', ['backButtonClicked', this.handleBackButton]);
    } else {
      console.log('   - –°–∫—Ä—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞–∑–∞–¥');
      Utils.safeTelegramManagerCall('hideBackButton');
    }
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –ø–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞
   * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö
   * @returns {Promise<void>}
   */
  async init() {
    // –ë–∞–∑–æ–≤–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è fallback —ç–∫—Ä–∞–Ω–æ–≤
    this.setupInputHandlers();
  }

  /**
   * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤–≤–æ–¥–∞ –¥–ª—è fallback —ç–∫—Ä–∞–Ω–æ–≤
   */
  setupInputHandlers() {
    if (!this.container) return;

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—è –∏–º–µ–Ω–∏
    const nameInput = this.container.querySelector('#user-name');
    if (nameInput) {
      nameInput.addEventListener('input', () => {
        this.validateAndUpdateButton();
      });
      
      nameInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' && this.isValid()) {
          this.handleMainButton();
        }
      });
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø–æ–ª—è –≥–æ—Ä–æ–¥–∞
    const cityInput = this.container.querySelector('#user-city');
    if (cityInput) {
      cityInput.addEventListener('input', () => {
        this.validateAndUpdateButton();
      });
      
      cityInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter' && this.isValid()) {
          this.handleMainButton();
        }
      });
    }
  }

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
   */
  validateAndUpdateButton() {
    this.updateMainButton();
  }

  /**
   * –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —ç–∫—Ä–∞–Ω–∞
   * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö
   * @returns {boolean}
   */
  isValid() {
    // –ë–∞–∑–æ–≤–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è –¥–ª—è fallback —ç–∫—Ä–∞–Ω–æ–≤
    switch (this.name) {
      case 'name-input':
        const nameInput = this.container?.querySelector('#user-name');
        return nameInput && Utils.isValidName(nameInput.value);
      
      case 'city-selection':
        const cityInput = this.container?.querySelector('#user-city');
        return cityInput && cityInput.value.trim().length >= 2;
      
      default:
        return true;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —ç–∫—Ä–∞–Ω–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
   * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö
   * @returns {Object}
   */
  getData() {
    // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ fallback —ç–∫—Ä–∞–Ω–æ–≤
    const data = { ...this.data };
    
    switch (this.name) {
      case 'name-input':
        const nameInput = this.container?.querySelector('#user-name');
        if (nameInput) {
          data.name = nameInput.value.trim();
        }
        break;
      
      case 'city-selection':
        const cityInput = this.container?.querySelector('#user-city');
        if (cityInput) {
          data.city = cityInput.value.trim();
        }
        break;
    }
    
    return data;
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
   * @returns {Promise<void>}
   */
  async handleMainButton() {
    if (!this.isValid()) {
      Utils.safeTelegramManagerCall('hapticFeedback', ['error']);
      return;
    }

    try {
      Utils.safeTelegramManagerCall('hapticFeedback', ['light']);
      await this.save();
      Router.nextScreen();
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç–∫—Ä–∞–Ω:', error);
      Utils.safeTelegramManagerCall('hapticFeedback', ['error']);
      Utils.showNotification('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö', 'error');
    }
  }

  /**
   * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥
   */
  handleBackButton() {
    Utils.safeTelegramManagerCall('hapticFeedback', ['light']);
    Router.goBack();
  }

  /**
   * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —ç–∫—Ä–∞–Ω–∞
   * –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –≤ –Ω–∞—Å–ª–µ–¥–Ω–∏–∫–∞—Ö
   * @returns {Promise<void>}
   */
  async save() {
    // –ë–∞–∑–æ–≤–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è fallback —ç–∫—Ä–∞–Ω–æ–≤
    const data = this.getData();
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage –∫–∞–∫ fallback
    if (data && Object.keys(data).length > 0) {
      try {
        const currentData = Utils.getFromStorage('userData', {});
        const updatedData = { ...currentData, ...data };
        Utils.saveToStorage('userData', updatedData);
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –ª–æ–∫–∞–ª—å–Ω–æ:', data);
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω–æ:', error);
      }
    }
  }

  /**
   * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø—Ä–∏ —É—Ö–æ–¥–µ —Å —ç–∫—Ä–∞–Ω–∞
   */
  cleanup() {
    Utils.safeTelegramManagerCall('removeEventListener', ['mainButtonClicked', this.handleMainButton]);
    Utils.safeTelegramManagerCall('removeEventListener', ['backButtonClicked', this.handleBackButton]);
  }

  /**
   * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –≥–ª–∞–≤–Ω–æ–π –∫–Ω–æ–ø–∫–∏
   */
  updateMainButton() {
    if (!this.hasMainButton) return;
    Utils.safeTelegramManagerCall('setMainButtonEnabled', [this.isValid()]);
  }
}

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–æ—É—Ç–∏–Ω–≥–∞ –º–µ–∂–¥—É —ç–∫—Ä–∞–Ω–∞–º–∏
 */
class ScreenRouter {
  constructor() {
    this.screens = new Map();
    this.currentScreen = null;
    this.history = [];
    this.currentStep = 0;
    this.totalSteps = 20;
    this.userData = null;
    
    // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–∫—Ä–∞–Ω–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    this.screenConfig = [
      { name: 'welcome', title: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!' },
      { name: 'name-input', title: '–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?' },
      { name: 'city-selection', title: '–í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥' },
      { name: 'progress-tracker', title: '–í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å' },
      // TODO: –î–æ–±–∞–≤–∏—Ç—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —ç–∫—Ä–∞–Ω—ã
    ];
  }

  /**
   * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
   * @returns {Promise<void>}
   */
  async initialize() {
    try {
      console.log('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –Ω–∞—á–∞—Ç–∞');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
      if (!window.Utils) {
        throw new Error('Utils –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
      }
      
      if (!document.getElementById('screen-container')) {
        throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }
      
      console.log('   - –û—Å–Ω–æ–≤–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã');
      
      // –ù–∞—á–∏–Ω–∞–µ–º —Å –±–∞–∑–æ–≤—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫ - –≤—Å–µ–≥–¥–∞ —Å welcome —ç–∫—Ä–∞–Ω–∞
      await this.startWithDefaults();
      
      console.log('‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞:', error);
      this.showEmergencyUI();
    }
  }

  /**
   * –ó–∞–ø—É—Å–∫ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
   * @returns {Promise<void>}
   */
  async startWithDefaults() {
    try {
      console.log('üîÑ –ó–∞–ø—É—Å–∫ —Ä–æ—É—Ç–µ—Ä–∞ —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–∞–∑–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
      this.currentStep = 0;
      this.userData = {
        isNewUser: true,
        currentStep: 0,
        user: null
      };
      
      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
      if (window.Utils?.updateProgressBar) {
        Utils.updateProgressBar(this.currentStep, this.totalSteps);
      }
      
      // –ü—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ welcome —ç–∫—Ä–∞–Ω
      console.log('üîÑ –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —ç–∫—Ä–∞–Ω welcome');
      await this.navigateToScreen('welcome');
      
      console.log('‚úÖ –†–æ—É—Ç–µ—Ä –∑–∞–ø—É—â–µ–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ —Å –±–∞–∑–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏:', error);
      this.showEmergencyUI();
    }
  }

  /**
   * –ü–æ–∫–∞–∑ –∞–≤–∞—Ä–∏–π–Ω–æ–≥–æ UI –ø—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–∫–∞—Ö
   */
  showEmergencyUI() {
    const container = document.getElementById('screen-container');
    if (container) {
      container.innerHTML = `
        <div class="screen screen--centered" style="padding: var(--spacing-6); text-align: center;">
          <div style="background: var(--color-surface); padding: var(--spacing-6); border-radius: var(--radius-lg); box-shadow: var(--shadow-2);">
            <h1 style="color: var(--color-error); margin-bottom: var(--spacing-4); font-size: var(--font-size-xl);">
              –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
            </h1>
            <p style="color: var(--color-text-secondary); margin-bottom: var(--spacing-6); line-height: var(--line-height-relaxed);">
              –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
            </p>
            <button 
              onclick="location.reload()" 
              style="
                background: var(--color-primary);
                color: var(--color-text-inverse);
                border: none;
                padding: var(--spacing-3) var(--spacing-6);
                border-radius: var(--radius-md);
                font-size: var(--font-size-base);
                cursor: pointer;
                transition: var(--transition-fast);
              "
              onmouseover="this.style.background='var(--color-primary-dark)'"
              onmouseout="this.style.background='var(--color-primary)'"
            >
              –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å
            </button>
          </div>
        </div>
      `;
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —ç–∫—Ä–∞–Ω–∞ –ø–æ –Ω–æ–º–µ—Ä—É —à–∞–≥–∞
   * @param {number} step –ù–æ–º–µ—Ä —à–∞–≥–∞
   * @returns {string} –ò–º—è —ç–∫—Ä–∞–Ω–∞
   */
  getScreenNameByStep(step) {
    if (step >= this.screenConfig.length) {
      return this.screenConfig[this.screenConfig.length - 1].name;
    }
    return this.screenConfig[step]?.name || 'welcome';
  }

  /**
   * –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞
   * @param {BaseScreen} screen –≠–∫–∑–µ–º–ø–ª—è—Ä —ç–∫—Ä–∞–Ω–∞
   */
  registerScreen(screen) {
    this.screens.set(screen.name, screen);
  }

  /**
   * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π —ç–∫—Ä–∞–Ω (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
   * @param {string} screenName –ò–º—è —ç–∫—Ä–∞–Ω–∞
   * @returns {Promise<void>}
   */
  async navigateToScreen(screenName) {
    try {
      console.log(`üîÑ –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω: ${screenName}`);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
      if (window.Utils?.toggleLoading) {
        Utils.toggleLoading(true, '–ó–∞–≥—Ä—É–∑–∫–∞ —ç–∫—Ä–∞–Ω–∞...');
      }

      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤
      const screenContainer = document.getElementById('screen-container');
      if (!screenContainer) {
        throw new Error('–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —ç–∫—Ä–∞–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω');
      }

      // –û—á–∏—â–∞–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω
      if (this.currentScreen?.cleanup) {
        try {
          this.currentScreen.cleanup();
        } catch (cleanupError) {
          console.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ —ç–∫—Ä–∞–Ω–∞:', cleanupError);
        }
      }

      // –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º —ç–∫—Ä–∞–Ω
      let screen = this.screens.get(screenName);
      if (!screen) {
        const config = this.screenConfig.find(s => s.name === screenName) || { name: screenName, title: screenName };
        screen = new BaseScreen(screenName, config);
        this.registerScreen(screen);
        console.log('   - –ù–æ–≤—ã–π —ç–∫—Ä–∞–Ω —Å–æ–∑–¥–∞–Ω:', screenName);
      }

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–∫—Ä–∞–Ω
      await screen.show();
      
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      this.currentScreen = screen;
      if (!this.history.includes(screenName)) {
        this.history.push(screenName);
      }

      // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
      const stepIndex = this.screenConfig.findIndex(s => s.name === screenName);
      if (stepIndex !== -1 && window.Utils?.updateProgressBar) {
        Utils.updateProgressBar(stepIndex, this.totalSteps);
      }

      console.log(`‚úÖ –≠–∫—Ä–∞–Ω ${screenName} –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ`);

    } catch (error) {
      console.error(`‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫—Ä–∞–Ω–∞ ${screenName}:`, error);
      this.showEmergencyUI();
    } finally {
      if (window.Utils?.toggleLoading) {
        Utils.toggleLoading(false);
      }
    }
  }

  /**
   * –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π —ç–∫—Ä–∞–Ω
   * @returns {Promise<void>}
   */
  async nextScreen() {
    const currentIndex = this.screenConfig.findIndex(s => s.name === this.currentScreen?.name);
    const nextIndex = currentIndex + 1;
    
    if (nextIndex < this.screenConfig.length) {
      this.currentStep = nextIndex;
      const nextScreenName = this.screenConfig[nextIndex].name;
      await this.navigateToScreen(nextScreenName);
    } else {
      // –î–æ—Å—Ç–∏–≥–ª–∏ –∫–æ–Ω—Ü–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞
      await this.completeOnboarding();
    }
  }

  /**
   * –í–æ–∑–≤—Ä–∞—Ç –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω
   * @returns {Promise<void>}
   */
  async goBack() {
    if (this.history.length <= 1) return;
    
    // –£–¥–∞–ª—è–µ–º —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω –∏–∑ –∏—Å—Ç–æ—Ä–∏–∏
    this.history.pop();
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω
    const previousScreenName = this.history[this.history.length - 1];
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏–π —ç–∫—Ä–∞–Ω
    await this.navigateToScreen(previousScreenName);
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
   * @returns {boolean}
   */
  canGoBack() {
    return this.history.length > 1;
  }

  /**
   * –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ–≤–∞
   * @returns {Promise<void>}
   */
  async completeOnboarding() {
    try {
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –±–æ—Ç—É –æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞
      Utils.safeTelegramManagerCall('sendData', [{
        action: 'onboarding_completed',
        userId: Utils.getTelegramId(),
        completedAt: Utils.getCurrentTimestamp()
      }]);

      Utils.showNotification('–ü—Ä–æ–≥—Ä–µ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!', 'success');
      
      // –ó–∞–∫—Ä—ã–≤–∞–µ–º WebApp
      setTimeout(() => {
        Utils.safeTelegramManagerCall('close');
      }, 2000);

    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ–≤–∞:', error);
      Utils.showNotification('–û—à–∏–±–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–µ–≤–∞', 'error');
    }
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
   * @returns {BaseScreen|null}
   */
  getCurrentScreen() {
    return this.currentScreen;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —à–∞–≥–∞
   * @returns {number}
   */
  getCurrentStep() {
    return this.currentStep;
  }

  /**
   * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
   * @returns {Object|null}
   */
  getUserData() {
    return this.userData;
  }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Ä–æ—É—Ç–µ—Ä–∞
const router = new ScreenRouter();

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.Router = router;
window.BaseScreen = BaseScreen;
