/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —É—Ç–∏–ª–∏—Ç—ã –¥–ª—è SmokyApp
 * –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ —Ä–∞–∑–Ω—ã—Ö —á–∞—Å—Ç—è—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 */

/**
 * –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID
 * @returns {string} –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
 */
const generateId = () => {
  return Math.random().toString(36).substr(2, 9);
};

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @returns {number|null} Telegram ID –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
 */
const getTelegramId = () => {
  try {
    const webApp = window.Telegram?.WebApp;
    if (!webApp || !webApp.initDataUnsafe?.user?.id) {
      // –í —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º hostname
      const isDevMode = window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1';
      if (isDevMode) {
        console.log('üîß –†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π Telegram ID');
        return 123456789; // –¢–µ—Å—Ç–æ–≤—ã–π ID –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
      }
      console.warn('Telegram WebApp –¥–∞–Ω–Ω—ã–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');
      return null;
    }
    return webApp.initDataUnsafe.user.id;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Telegram ID:', error);
    return null;
  }
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Telegram
 * @returns {Object|null} –û–±—ä–µ–∫—Ç —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ null
 */
const getTelegramUser = () => {
  try {
    const webApp = window.Telegram?.WebApp;
    if (!webApp || !webApp.initDataUnsafe?.user) {
      return null;
    }
    
    const user = webApp.initDataUnsafe.user;
    return {
      id: user.id,
      firstName: user.first_name || '',
      lastName: user.last_name || '',
      username: user.username || '',
      languageCode: user.language_code || 'ru',
      isPremium: user.is_premium || false
    };
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error);
    return null;
  }
};

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} firstName –ò–º—è
 * @param {string} lastName –§–∞–º–∏–ª–∏—è
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–º—è
 */
const formatUserName = (firstName = '', lastName = '') => {
  const name = `${firstName} ${lastName}`.trim();
  return name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å';
};

/**
 * –î–µ–±–∞—É–Ω—Å —Ñ—É–Ω–∫—Ü–∏–∏
 * @param {Function} func –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–±–∞—É–Ω—Å–∞
 * @param {number} wait –í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤ –º—Å
 * @returns {Function} –î–µ–±–∞—É–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
const debounce = (func, wait = 300) => {
  let timeout;
  return function executedFunction(...args) {
    const later = () => {
      clearTimeout(timeout);
      func(...args);
    };
    clearTimeout(timeout);
    timeout = setTimeout(later, wait);
  };
};

/**
 * –¢—Ä–æ—Ç—Ç–ª–∏–Ω–≥ —Ñ—É–Ω–∫—Ü–∏–∏
 * @param {Function} func –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç—Ä–æ—Ç—Ç–ª–∏–Ω–≥–∞
 * @param {number} limit –õ–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –≤ –º—Å
 * @returns {Function} –¢—Ä–æ—Ç—Ç–ª–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
 */
const throttle = (func, limit = 100) => {
  let inThrottle;
  return function executedFunction(...args) {
    if (!inThrottle) {
      func.apply(this, args);
      inThrottle = true;
      setTimeout(() => inThrottle = false, limit);
    }
  };
};

/**
 * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
 * @param {string} message –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
 * @param {string} type –¢–∏–ø —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: success, error, warning, info
 * @param {number} duration –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–∫–∞–∑–∞ –≤ –º—Å
 */
const showNotification = (message, type = 'info', duration = 3000) => {
  const container = document.getElementById('notification-container');
  if (!container) return;

  const notification = document.createElement('div');
  notification.className = `notification notification--${type}`;
  notification.innerHTML = `
    <span>${message}</span>
    <button type="button" onclick="this.parentElement.remove()" style="background:none;border:none;color:inherit;font-size:18px;cursor:pointer;">√ó</button>
  `;

  container.appendChild(notification);

  // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ
  setTimeout(() => {
    if (notification.parentElement) {
      notification.remove();
    }
  }, duration);
};

/**
 * –ü–æ–∫–∞–∑/—Å–∫—Ä—ã—Ç–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞–≥—Ä—É–∑–∫–∏
 * @param {boolean} show –ü–æ–∫–∞–∑–∞—Ç—å –∏–ª–∏ —Å–∫—Ä—ã—Ç—å
 * @param {string} text –¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏
 */
const toggleLoading = (show = true, text = '–ó–∞–≥—Ä—É–∑–∫–∞...') => {
  const overlay = document.getElementById('loading-overlay');
  const loadingText = document.querySelector('.loading-text');
  
  if (!overlay) return;
  
  if (show) {
    if (loadingText) {
      loadingText.textContent = text;
    }
    overlay.classList.remove('hidden');
  } else {
    overlay.classList.add('hidden');
  }
};

/**
 * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
 * @param {number} step –¢–µ–∫—É—â–∏–π —à–∞–≥
 * @param {number} totalSteps –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —à–∞–≥–æ–≤
 */
const updateProgressBar = (step, totalSteps = 20) => {
  const progressFill = document.getElementById('progress-fill');
  if (!progressFill) return;

  const percentage = Math.min(100, Math.max(0, (step / totalSteps) * 100));
  progressFill.style.width = `${percentage}%`;
};

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è email
 * @param {string} email Email –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
const isValidEmail = (email) => {
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  return emailRegex.test(email);
};

/**
 * –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏ (—Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –ø—Ä–æ–±–µ–ª—ã)
 * @param {string} name –ò–º—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 * @returns {boolean} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏
 */
const isValidName = (name) => {
  if (!name || name.trim().length < 2) return false;
  const nameRegex = /^[–∞-—è—ëa-z\s]+$/i;
  return nameRegex.test(name.trim());
};

/**
 * –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ localStorage
 * @param {string} key –ö–ª—é—á
 * @param {any} value –ó–Ω–∞—á–µ–Ω–∏–µ
 */
const saveToStorage = (key, value) => {
  try {
    localStorage.setItem(key, JSON.stringify(value));
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ localStorage:', error);
  }
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
 * @param {string} key –ö–ª—é—á
 * @param {any} defaultValue –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 * @returns {any} –°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
 */
const getFromStorage = (key, defaultValue = null) => {
  try {
    const item = localStorage.getItem(key);
    return item ? JSON.parse(item) : defaultValue;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è –∏–∑ localStorage:', error);
    return defaultValue;
  }
};

/**
 * –£–¥–∞–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage
 * @param {string} key –ö–ª—é—á
 */
const removeFromStorage = (key) => {
  try {
    localStorage.removeItem(key);
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ localStorage:', error);
  }
};

/**
 * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –≤ —á–∏—Ç–∞–µ–º—ã–π –≤–∏–¥
 * @param {Date|string} date –î–∞—Ç–∞
 * @returns {string} –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
 */
const formatDate = (date) => {
  try {
    const d = new Date(date);
    return d.toLocaleDateString('ru-RU', {
      year: 'numeric',
      month: 'long',
      day: 'numeric'
    });
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã:', error);
    return '';
  }
};

/**
 * –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
 * @returns {number} Timestamp –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
 */
const getCurrentTimestamp = () => {
  return Math.floor(Date.now() / 1000);
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ Telegram WebApp
 * @returns {boolean} –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ Telegram WebApp
 */
const isTelegramWebAppSupported = () => {
  return !!(window.Telegram && window.Telegram.WebApp);
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞, –∑–∞–ø—É—â–µ–Ω–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
 * @returns {boolean} –ó–∞–ø—É—â–µ–Ω–æ –ª–∏ –≤ Telegram
 */
const isRunningInTelegram = () => {
  return isTelegramWebAppSupported() && window.Telegram.WebApp.initData;
};

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
 * @param {Function} func –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
 * @param {any} fallback –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
 * @returns {any} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –∏–ª–∏ fallback
 */
const safeExecute = async (func, fallback = null) => {
  try {
    return await func();
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏:', error);
    return fallback;
  }
};

/**
 * –ë–µ–∑–æ–ø–∞—Å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ TelegramManager —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
 * @param {string} method –ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ç–æ–¥–∞ TelegramManager
 * @param {Array} args –ê—Ä–≥—É–º–µ–Ω—Ç—ã –¥–ª—è –º–µ—Ç–æ–¥–∞
 * @param {any} fallback –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
 * @returns {any} –†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ç–æ–¥–∞ –∏–ª–∏ fallback
 */
const safeTelegramManagerCall = (method, args = [], fallback = null) => {
  try {
    if (!window.TelegramManager) {
      console.warn(`TelegramManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤—ã–∑–æ–≤–∞ ${method}`);
      return fallback;
    }
    
    if (typeof window.TelegramManager[method] !== 'function') {
      console.warn(`–ú–µ—Ç–æ–¥ ${method} –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ TelegramManager`);
      return fallback;
    }
    
    // –î–ª—è –º–µ—Ç–æ–¥–æ–≤, —Ç—Ä–µ–±—É—é—â–∏—Ö –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ TelegramManager
    const methodsRequiringReady = [
      'showMainButton', 'hideMainButton', 'updateMainButtonText', 'setMainButtonEnabled',
      'showBackButton', 'hideBackButton', 'hapticFeedback', 'sendData', 'close',
      'getViewportSize', 'addEventListener', 'removeEventListener'
    ];
    
    if (methodsRequiringReady.includes(method)) {
      if (typeof window.TelegramManager.isReady !== 'function' || !window.TelegramManager.isReady()) {
        console.warn(`TelegramManager –Ω–µ –≥–æ—Ç–æ–≤ –¥–ª—è –≤—ã–∑–æ–≤–∞ ${method}`);
        return fallback;
      }
    }
    
    return window.TelegramManager[method](...args);
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ TelegramManager.${method}:`, error);
    return fallback;
  }
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ TelegramManager
 * @returns {boolean} –ì–æ—Ç–æ–≤–Ω–æ—Å—Ç—å TelegramManager
 */
const isTelegramManagerReady = () => {
  return !!(
    window.TelegramManager && 
    typeof window.TelegramManager.isReady === 'function' && 
    window.TelegramManager.isReady()
  );
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.Utils = {
  generateId,
  getTelegramId,
  getTelegramUser,
  formatUserName,
  debounce,
  throttle,
  showNotification,
  toggleLoading,
  updateProgressBar,
  isValidEmail,
  isValidName,
  saveToStorage,
  getFromStorage,
  removeFromStorage,
  formatDate,
  getCurrentTimestamp,
  isTelegramWebAppSupported,
  isRunningInTelegram,
  safeExecute,
  safeTelegramManagerCall,
  isTelegramManagerReady
};
