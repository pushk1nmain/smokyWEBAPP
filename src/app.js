/**
 * SmokyApp - Main Application Entry Point
 * –ì–ª–∞–≤–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π —à–∞–≥–æ–≤
 * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –∫—É–¥–∞ –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
 */

class SmokyApp {
    constructor() {
        this.isInitialized = false;
        this.router = null;
        
        this.init();
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    async init() {
        try {
            console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è SmokyApp...');
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram WebApp
            this.initTelegramWebApp();
            
            // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
            await this.waitForDependencies();
            
            // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —à–∞–≥–æ–≤
            await this.initStepRouter();
            
            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏ –≤—ã–ø–æ–ª–Ω—è–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é
            await this.handleInitialNavigation();
            
            this.isInitialized = true;
            console.log('‚úÖ SmokyApp —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            
        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ SmokyApp:', error);
            
            // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
            this.fallbackToWelcome();
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp API
     * –ë–∞–∑–æ–≤–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤ Telegram
     */
    initTelegramWebApp() {
        if (window.Telegram?.WebApp) {
            try {
                // –£–≤–µ–¥–æ–º–ª—è–µ–º Telegram —á—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ
                window.Telegram.WebApp.ready();
                
                // –†–∞—Å—à–∏—Ä—è–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω
                window.Telegram.WebApp.expand();
                
                // –í–∫–ª—é—á–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–∏—è
                window.Telegram.WebApp.enableClosingConfirmation();
                
                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç–æ–≤—É—é —Å—Ö–µ–º—É
                if (window.Telegram.WebApp.colorScheme === 'dark') {
                    document.documentElement.classList.add('dark-theme');
                }
                
                // –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
                const user = window.Telegram.WebApp.initDataUnsafe?.user;
                if (user) {
                    console.log(`üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å Telegram: ${user.first_name} (ID: ${user.id})`);
                }
                
                console.log('üì± Telegram WebApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                
            } catch (error) {
                console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Telegram WebApp:', error);
            }
        } else {
            console.warn('‚ö†Ô∏è Telegram WebApp API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ –≤ Telegram –∏–ª–∏ —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)');
        }
    }

    /**
     * –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
     */
    async waitForDependencies() {
        const maxWaitTime = 10000; // –ú–∞–∫—Å–∏–º—É–º 10 —Å–µ–∫—É–Ω–¥ –æ–∂–∏–¥–∞–Ω–∏—è
        const checkInterval = 100; // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 100–º—Å
        let waitTime = 0;
        
        return new Promise((resolve, reject) => {
            const checkDependencies = () => {
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
                const hasStepRouter = typeof window.StepRouter !== 'undefined';
                const hasAPIClient = typeof window.APIClient !== 'undefined';
                
                if (hasStepRouter && hasAPIClient) {
                    console.log('üì¶ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
                    resolve();
                    return;
                }
                
                waitTime += checkInterval;
                
                if (waitTime >= maxWaitTime) {
                    console.warn('‚ö†Ô∏è –ù–µ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –∑–∞ –æ—Ç–≤–µ–¥–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è');
                    console.warn(`   StepRouter: ${hasStepRouter ? '‚úÖ' : '‚ùå'}`);
                    console.warn(`   APIClient: ${hasAPIClient ? '‚úÖ' : '‚ùå'}`);
                    resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É –¥–∞–∂–µ –±–µ–∑ –≤—Å–µ—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
                    return;
                }
                
                setTimeout(checkDependencies, checkInterval);
            };
            
            checkDependencies();
        });
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞ —à–∞–≥–æ–≤
     * –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     */
    async initStepRouter() {
        try {
            if (window.StepRouter) {
                this.router = window.StepRouter;
                
                // –î–æ–∂–∏–¥–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞
                if (!this.router.isInitialized) {
                    await this.router.init();
                }
                
                console.log('üß≠ StepRouter –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ');
            } else {
                throw new Error('StepRouter –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Ä–æ—É—Ç–µ—Ä–∞:', error);
            throw error;
        }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–∞ –∫–∞–∫–æ–π —ç–∫—Ä–∞–Ω –Ω–∞–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    async handleInitialNavigation() {
        try {
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å
            const currentPath = window.location.pathname;
            console.log(`üìç –¢–µ–∫—É—â–∏–π –ø—É—Ç—å: ${currentPath}`);
            console.log(`üîß –°—Ç–∞—Ç—É—Å —Ä–æ—É—Ç–µ—Ä–∞: ${this.router ? '–î–æ—Å—Ç—É–ø–µ–Ω' : '–ù–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}`);
            
            if (this.router) {
                console.log(`üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–∞:`, this.router.getState());
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã —É–∂–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
            if (this.isMainAppPage(currentPath)) {
                console.log('üè† –ù–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, –≤—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ');
                
                // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —à–∞–≥—É
                if (this.router) {
                    await this.router.navigateToCurrentStep();
                } else {
                    console.error('‚ùå –†–æ—É—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
                    this.fallbackToWelcome();
                }
                return;
            }
            
            // –ï—Å–ª–∏ –º—ã —É–∂–µ –Ω–∞ –æ–¥–Ω–æ–º –∏–∑ —ç–∫—Ä–∞–Ω–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å
            if (this.isAppScreen(currentPath)) {
                console.log('üì± –ù–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å...');
                await this.validateCurrentScreen();
                
                // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
                this.setupScreenEventHandlers(currentPath);
                return;
            }
            
            // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä
            console.log('‚ùì –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
            if (this.router) {
                await this.router.navigateToCurrentStep();
            } else {
                console.error('‚ùå –†–æ—É—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
                this.fallbackToWelcome();
            }
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–∞—á–∞–ª—å–Ω–æ–π –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:', error);
            this.fallbackToWelcome();
        }
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—É—Ç—å –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * @param {string} path –¢–µ–∫—É—â–∏–π –ø—É—Ç—å
     * @returns {boolean} True –µ—Å–ª–∏ —ç—Ç–æ –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
     */
    isMainAppPage(path) {
        const mainPaths = [
            '/',
            '/index.html',
            '/frontend/',
            '/frontend/index.html'
        ];
        
        const isMain = mainPaths.some(mainPath => path === mainPath || path.endsWith(mainPath));
        console.log(`üè† isMainAppPage(${path}) = ${isMain}`);
        return isMain;
    }

    /**
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø—É—Ç—å –æ–¥–Ω–∏–º –∏–∑ —ç–∫—Ä–∞–Ω–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * @param {string} path –¢–µ–∫—É—â–∏–π –ø—É—Ç—å
     * @returns {boolean} True –µ—Å–ª–∏ —ç—Ç–æ —ç–∫—Ä–∞–Ω –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    isAppScreen(path) {
        const screenPaths = [
            '/src/pages/welcome/',
            '/src/pages/name-input/',
            '/src/pages/city-input/',
            '/src/pages/how-did-you-know/',
            '/src/pages/waking-up/'
        ];
        
        return screenPaths.some(screenPath => path.includes(screenPath));
    }

    /**
     * –í–∞–ª–∏–¥–∏—Ä—É–µ—Ç —Ç–µ–∫—É—â–∏–π —ç–∫—Ä–∞–Ω —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –¥–æ–ª–∂–µ–Ω –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –Ω–∞ —ç—Ç–æ–º —ç–∫—Ä–∞–Ω–µ
     */
    async validateCurrentScreen() {
        try {
            if (!this.router) {
                console.warn('‚ö†Ô∏è –†–æ—É—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏');
                return;
            }
            
            // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            const currentStep = await this.router.getCurrentStep();
            const expectedScreenUrl = this.router.getScreenForStep(currentStep);
            
            if (!expectedScreenUrl) {
                console.error(`‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —ç–∫—Ä–∞–Ω –¥–ª—è —à–∞–≥–∞ ${currentStep}`);
                this.fallbackToWelcome();
                return;
            }
            
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å –æ–∂–∏–¥–∞–µ–º–æ–º—É
            const currentPath = window.location.pathname;
            console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å = ${currentPath}, –æ–∂–∏–¥–∞–µ–º—ã–π = ${expectedScreenUrl}`);
            
            if (currentPath === expectedScreenUrl || currentPath.includes(expectedScreenUrl) || expectedScreenUrl.includes(currentPath)) {
                console.log(`‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ –¥–ª—è —à–∞–≥–∞ ${currentStep}`);
                return;
            }
            
            // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —ç–∫—Ä–∞–Ω–µ - –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º
            console.log(`üîÑ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º —Å —à–∞–≥–∞ ${this.getStepFromPath(currentPath)} –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —à–∞–≥ ${currentStep}`);
            console.log(`üöÄ –ü–µ—Ä–µ—Ö–æ–¥: ${currentPath} ‚Üí ${expectedScreenUrl}`);
            await this.router.navigateToCurrentStep(true);
            
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞:', error);
        }
    }

    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω–æ–º–µ—Ä —à–∞–≥–∞ –ø–æ —Ç–µ–∫—É—â–µ–º—É –ø—É—Ç–∏
     * @param {string} path –¢–µ–∫—É—â–∏–π –ø—É—Ç—å
     * @returns {number|null} –ù–æ–º–µ—Ä —à–∞–≥–∞ –∏–ª–∏ null –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω
     */
    getStepFromPath(path) {
        const stepMappings = {
            '/src/pages/welcome/': 1,
            '/src/pages/name-input/': 2,
            '/src/pages/city-input/': 3,
            '/src/pages/how-did-you-know/': 4,
            '/src/pages/waking-up/': 5
        };
        
        for (const [screenPath, step] of Object.entries(stepMappings)) {
            if (path.includes(screenPath)) {
                return step;
            }
        }
        
        return null;
    }

    /**
     * –†–µ–∑–µ—Ä–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ —Å–ª—É—á–∞–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫
     */
    fallbackToWelcome() {
        console.log('üè† –í—ã–ø–æ–ª–Ω—è–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è');
        
        const welcomeUrl = '/src/pages/welcome/index.html';
        
        try {
            if (window.LoadingManager?.navigateWithTransition) {
                window.LoadingManager.navigateWithTransition(welcomeUrl);
            } else {
                window.location.href = welcomeUrl;
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –¥–∞–∂–µ –ø—Ä–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–º –ø–µ—Ä–µ—Ö–æ–¥–µ:', error);
            // –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞ - –∂–µ—Å—Ç–∫–∏–π –ø–µ—Ä–µ—Ö–æ–¥
            window.location.replace(welcomeUrl);
        }
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * @returns {Object} –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     */
    getState() {
        return {
            isInitialized: this.isInitialized,
            currentPath: window.location.pathname,
            routerState: this.router?.getState() || null,
            timestamp: new Date().toISOString()
        };
    }

    /**
     * –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —ç–∫—Ä–∞–Ω–∞
     * @param {string} currentPath –¢–µ–∫—É—â–∏–π –ø—É—Ç—å
     */
    setupScreenEventHandlers(currentPath) {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —ç–∫—Ä–∞–Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è
        if (currentPath.includes('/welcome/')) {
            console.log('üîß –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è welcome screen');
            
            const startButton = document.getElementById('startButton');
            if (startButton && !startButton.hasAttribute('data-smoky-handler')) {
                startButton.setAttribute('data-smoky-handler', 'true');
                startButton.addEventListener('click', async (e) => {
                    e.preventDefault();
                    e.stopPropagation();
                    
                    console.log('üöÄ SmokyApp: –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ –ü–æ–µ—Ö–∞–ª–∏!');
                    
                    // Haptic feedback –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
                    if (window.Telegram?.WebApp?.HapticFeedback) {
                        window.Telegram.WebApp.HapticFeedback.impactOccurred('medium');
                    }
                    
                    try {
                        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É —á–µ—Ä–µ–∑ —Ä–æ—É—Ç–µ—Ä
                        if (this.router) {
                            const success = await this.router.goToNextStep();
                            if (!success) {
                                console.error('‚ùå StepRouter –Ω–µ —Å–º–æ–≥ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ø–µ—Ä–µ—Ö–æ–¥');
                                // Fallback
                                window.location.href = '../name-input/index.html';
                            }
                        } else {
                            console.error('‚ùå –†–æ—É—Ç–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞');
                            window.location.href = '../name-input/index.html';
                        }
                    } catch (error) {
                        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —à–∞–≥—É:', error);
                        window.location.href = '../name-input/index.html';
                    }
                });
                
                console.log('‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ welcome –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
            }
        }
        
        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö —ç–∫—Ä–∞–Ω–æ–≤
        // if (currentPath.includes('/name-input/')) { ... }
        // if (currentPath.includes('/city-input/')) { ... }
    }

    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
     * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫
     */
    static handleGlobalError(error, source = 'unknown') {
        console.error(`üö® –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ—à–∏–±–∫–∞ [${source}]:`, error);
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ –≤ Telegram –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω–æ
        if (window.Telegram?.WebApp?.showAlert) {
            window.Telegram.WebApp.showAlert(
                '–ü—Ä–æ–∏–∑–æ—à–ª–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.'
            );
        }
        
        // –õ–æ–≥–∏—Ä—É–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        console.error('Stack trace:', error.stack);
        console.error('User Agent:', navigator.userAgent);
        console.error('Current URL:', window.location.href);
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
window.SmokyApp = new SmokyApp();

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
window.addEventListener('error', (event) => {
    SmokyApp.handleGlobalError(event.error, 'window.error');
});

window.addEventListener('unhandledrejection', (event) => {
    SmokyApp.handleGlobalError(event.reason, 'unhandled.promise');
});

console.log('üîß SmokyApp –∑–∞–≥—Ä—É–∂–µ–Ω');