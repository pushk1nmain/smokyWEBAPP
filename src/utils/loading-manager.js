/**
 * –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∑–∞–≥—Ä—É–∑–∫—É —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏ –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç UX
 */
const LoadingManager = {
    activeTimeouts: new Set(),
    
    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–æ–ª–≥–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π (>300ms)
     * @param {string} text - –¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏
     * @param {number} minDelay - –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫–∞–∑–æ–º (–º—Å)
     * @returns {number|null} ID —Ç–∞–π–º–∞—É—Ç–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã
     */
    showConditional: (text, minDelay = 300) => {
        const loadingOverlay = document.getElementById('loadingOverlay');
        const loadingText = document.querySelector('.loading-text');
        
        if (!loadingOverlay) return null;
        
        const timeoutId = setTimeout(() => {
            loadingOverlay.classList.remove('hidden');
            
            if (loadingText) {
                loadingText.style.opacity = '0';
                setTimeout(() => {
                    loadingText.innerHTML = text + '<span class="loading-dots"></span>';
                    loadingText.style.opacity = '1';
                }, 200);
            }
            
            // Haptic feedback
            if (window.Telegram?.WebApp?.HapticFeedback) {
                window.Telegram.WebApp.HapticFeedback.impactOccurred('light');
            }
        }, minDelay);
        
        LoadingManager.activeTimeouts.add(timeoutId);
        return timeoutId;
    },
    
    /**
     * –°–∫—Ä—ã—Ç—å –∑–∞–≥—Ä—É–∑–∫—É –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏–ª–∏ —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
     * @param {number|null} timeoutId - ID —Ç–∞–π–º–∞—É—Ç–∞ –¥–ª—è –æ—Ç–º–µ–Ω—ã
     * @param {number} delay - –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–∫—Ä—ã—Ç–∏–µ–º
     */
    hide: (timeoutId = null, delay = 0) => {
        if (timeoutId) {
            clearTimeout(timeoutId);
            LoadingManager.activeTimeouts.delete(timeoutId);
        }
        
        const loadingOverlay = document.getElementById('loadingOverlay');
        if (!loadingOverlay) return;
        
        if (delay > 0) {
            setTimeout(() => {
                loadingOverlay.classList.add('hidden');
                if (window.Telegram?.WebApp?.HapticFeedback) {
                    window.Telegram.WebApp.HapticFeedback.notificationOccurred('success');
                }
            }, delay);
        } else {
            loadingOverlay.classList.add('hidden');
        }
    },
    
    /**
     * –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è API –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ–º –∑–∞–≥—Ä—É–∑–∫–æ–π
     * @param {Function} apiCall - –ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è API –∑–∞–ø—Ä–æ—Å–∞
     * @param {string} loadingText - –¢–µ–∫—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏
     * @returns {Promise} –†–µ–∑—É–ª—å—Ç–∞—Ç API –∑–∞–ø—Ä–æ—Å–∞
     */
    wrapApiCall: async (apiCall, loadingText = '–ó–∞–≥—Ä—É–∂–∞–µ–º') => {
        const timeoutId = LoadingManager.showConditional(loadingText);
        try {
            const result = await apiCall();
            LoadingManager.hide(timeoutId);
            return result;
        } catch (error) {
            LoadingManager.hide(timeoutId);
            throw error;
        }
    },
    
    /**
     * –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∞ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –≤ —Ñ–æ–Ω–µ
     * @param {string} url - URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –ø—Ä–µ–¥–∑–∞–≥—Ä—É–∑–∫–∏
     */
    preloadPage: (url) => {
        if (!url) return;
        
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        const link = document.createElement('link');
        link.rel = 'prefetch';
        link.href = url;
        document.head.appendChild(link);
        
        // –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–∞–µ–º —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã
        const preloadResources = [
            url.replace('index.html', 'script.js'),
            url.replace('index.html', 'style.css')
        ];
        
        preloadResources.forEach(resource => {
            const resourceLink = document.createElement('link');
            resourceLink.rel = 'prefetch';
            resourceLink.href = resource;
            document.head.appendChild(resourceLink);
        });
        
        console.log(`üöÄ –ü—Ä–µ–¥–∑–∞–≥—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞: ${url}`);
    },
    
    /**
     * –ë—ã—Å—Ç—Ä—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –±–µ–∑ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
     * @param {string} url - URL –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞
     * @param {number} delay - –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ (–º—Å)
     */
    fastNavigate: (url, delay = 100) => {
        setTimeout(() => {
            window.location.href = url;
        }, delay);
    },
    
    /**
     * –û—á–∏—Å—Ç–∫–∞ –≤—Å–µ—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö —Ç–∞–π–º–∞—É—Ç–æ–≤ (–¥–ª—è cleanup)
     */
    cleanup: () => {
        LoadingManager.activeTimeouts.forEach(timeoutId => {
            clearTimeout(timeoutId);
        });
        LoadingManager.activeTimeouts.clear();
    }
};

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
if (typeof window !== 'undefined') {
    window.LoadingManager = LoadingManager;
}