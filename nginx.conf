# HTTP -> HTTPS (в пределах того же домена)
server {
    listen 80;
    listen [::]:80;
    server_name webapp.smokybot.com www.webapp.smokybot.com;

    location ^~ /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        default_type "text/plain";
        try_files $uri =404;
    }

    location / {
        return 301 https://$host$request_uri;
    }
}

# HTTPS фронт
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name webapp.smokybot.com www.webapp.smokybot.com;

    ssl_certificate     /etc/letsencrypt/live/webapp.smokybot.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/webapp.smokybot.com/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache   shared:SSL:10m;
    ssl_protocols       TLSv1.2 TLSv1.3;

    # Оставляем acme-челлендж и на 443 для автообновления
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/letsencrypt;
        default_type "text/plain";
        try_files $uri =404;
    }

    # API прокси к api.smokybot.com
    location /api/ {
        proxy_pass https://api.smokybot.com/api/;
        proxy_http_version 1.1;
        
        proxy_set_header Host api.smokybot.com;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header User-Agent $http_user_agent;
        
        # Передаем все заголовки включая API ключ
        proxy_pass_request_headers on;
        
        # CORS заголовки для Telegram WebApp
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-API-Key" always;
        
        # Обработка префайт запросов
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-API-Key" always;
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain charset=UTF-8";
            add_header Content-Length 0;
            return 204;
        }
    }

    # Твой фронт (Docker или локальный сервис)
    location / {
        proxy_pass http://localhost:8080;
        proxy_http_version 1.1;

        proxy_set_header Host               $host;
        proxy_set_header X-Real-IP          $remote_addr;
        proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto  $scheme;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        proxy_read_timeout 86400;

        # Для встраивания во фрейм Telegram — лучше CSP
        add_header Content-Security-Policy "frame-ancestors 'self' https://web.telegram.org https://*.telegram.org;" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }

    access_log /var/log/nginx/webapp.smokybot.com.access.log;
    error_log  /var/log/nginx/webapp.smokybot.com.error.log;
}

# WebSocket helper
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}