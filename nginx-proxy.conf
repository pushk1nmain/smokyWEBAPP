# Конфигурация nginx для проксирования SmokyApp
# Разместите этот файл в вашем главном nginx: /etc/nginx/sites-available/smokyapp

# Upstream для бэкенда SmokyApp
upstream smokyapp_backend {
    server smokyapp-web:80;  # Имя контейнера и внутренний порт
    
    # Опции для повышения надежности
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# HTTP -> HTTPS редирект
server {
    listen 80;
    server_name your-domain.com www.your-domain.com;  # Замените на ваш домен
    
    # Для получения Let's Encrypt сертификатов
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Редирект всего остального на HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS сервер
server {
    listen 443 ssl http2;
    server_name your-domain.com www.your-domain.com;  # Замените на ваш домен
    
    # SSL сертификаты (замените на ваши пути)
    ssl_certificate /etc/letsencrypt/live/your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/your-domain.com/privkey.pem;
    
    # SSL настройки безопасности
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # HSTS заголовок
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Заголовки безопасности для Telegram Web App
    add_header X-Frame-Options "ALLOWALL" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Content Security Policy для Telegram Web App
    add_header Content-Security-Policy "default-src 'self' https://telegram.org; script-src 'self' 'unsafe-inline' https://telegram.org; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https: wss:; frame-ancestors https://web.telegram.org;" always;
    
    # Настройки для больших файлов (если нужно)
    client_max_body_size 16M;
    
    # Основное проксирование
    location / {
        # Проксирование к контейнеру SmokyApp
        proxy_pass http://smokyapp_backend;
        
        # Заголовки для правильного проксирования
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $server_name;
        
        # WebSocket поддержка (если нужно в будущем)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Кэширование для статических файлов
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|woff|woff2|ttf|eot)$ {
            proxy_pass http://smokyapp_backend;
            
            # Кэширование на стороне nginx
            proxy_cache_valid 200 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # Заголовки
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
    
    # Health check endpoint
    location /health {
        proxy_pass http://smokyapp_backend/health;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Не кэшировать health check
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # Логирование
    access_log /var/log/nginx/smokyapp_access.log;
    error_log /var/log/nginx/smokyapp_error.log;
}

# Отдельный блок для API (если будет в будущем)
server {
    listen 443 ssl http2;
    server_name api.your-domain.com;  # Замените на ваш API домен
    
    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/api.your-domain.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.your-domain.com/privkey.pem;
    
    # SSL настройки (те же что выше)
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    
    # Проксирование к API (настроить когда будет backend)
    location / {
        # proxy_pass http://backend_api;
        return 503 "API temporarily unavailable";
    }
}
